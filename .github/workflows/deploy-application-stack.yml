name: Deploy Application Stack

on:
  workflow_dispatch:
    inputs:
      vpc_id:
        required: true
        type: string
        description: api name
      dynamodb_table:
        type: String
        description: Swagger JSON definition for the API Gateway
        default: '{}'
      s3_bucket:
        type: String
        description: Swagger JSON definition for the API Gateway
      lambda_function:
        type: String
        description: Swagger JSON definition for the API Gateway
      port_payload:
        required: true
        description:
          Port's payload, including details for who triggered the action and
          general context (blueprint, run id, etc...)
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Copy template file
        run: |
          mkdir -p ./resources
          cp templates/application-stack.tf ./resources/${{ inputs.name }}.tf
      - name: Update new file data
        run: |
          sed -i 's/{{ vpc_id }}/${{ inputs.vpc_id }}/' ./resources/${{ inputs.vpc_id }}.tf
          sed -i 's/{{ vpc_id }}/${{ inputs.vpc_id }}/' ./resources/${{ inputs.vpc_id }}.tf
      - name: Open a pull request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.ORG_ADMIN_TOKEN }}
          commit-message: Create new resource - ${{ inputs.vpc_id }}
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          branch: new-resource-${{ inputs.vpc_id }}
          delete-branch: true
          title: Create new resource - ${{ inputs.vpc_id }}
          body: |
            Create new ${{ inputs.visibility }} resource - ${{ inputs.vpc_id }}
          draft: false

  create-entity-in-port-and-update-run:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: UPSERT Entity
        uses: port-labs/port-github-action@v1
        with:
          identifier: ${{fromJson(inputs.port_payload).context.entity}}
          blueprint: service
          properties: |-
            {
              "resource_definitions": "${{ github.server_url }}/${{ github.repository_owner }}/${{fromJson(inputs.port_payload).context.entity}}/blob/main/resources/"
            }
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: UPSERT
          runId: ${{fromJson(inputs.port_payload).context.runId}}
      - name: Create a log message
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{fromJson(inputs.port_payload).context.runId}}
          logMessage: Pull request created successfully for "${{ inputs.vpc_id }}" ðŸš€
