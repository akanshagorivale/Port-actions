name: Deploy API Gateway

on:
  workflow_dispatch:
    inputs:
      api_name:
        required: true
        type: string
        description: api name
      swagger_definition:
        type: String
        description: Swagger JSON definition for the API Gateway
        default: '{}'
      port_payload:
        required: true
        description:
          Port's payload, including details for who triggered the action and
          general context (blueprint, run id, etc...)
        type: string

jobs:
  deploy-api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy API Gateway
        run: aws cloudformation deploy --template-file ./templates/apiGateway.yaml --stack-name ApiStack --capabilities CAPABILITY_IAM --parameter-overrides APIName=${{ inputs.api_name }} SwaggerDefinition=${{ inputs.swagger_definition }}

      - name: UPSERT API Gateway Entity in Port
        uses: port-labs/port-github-action@v1
        with:
          identifier: ${{ inputs.api_name }}
          title: ${{ inputs.api_name }}
          team: "[]"
          icon: EC2
          blueprint: api_gateway
          properties: |-
            {
              "api_name": "${{ inputs.api_name }}",
              "swagger_definition": "${{ inputs.swagger_definition }}"
            }
          relations: "{}"
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: UPSERT
          runId: ${{fromJson(inputs.port_payload).context.runId}}
