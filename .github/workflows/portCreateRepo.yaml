name: Scaffold a new service

on:
  workflow_dispatch:
    inputs:
      port_payload:
        required: true
        description: "Port's payload, including details for who triggered the action and general context (blueprint, run id, etc...)"
        type: string

jobs:
  scaffold-service:
    env:
      ORG_NAME: starfishdigital123
    runs-on: ubuntu-latest
    steps:
      - name: Update Ubuntu Packages
        run: sudo apt-get update

      - name: Install Ubuntu Packages
        run: sudo apt-get install -y jq curl python3 python3-pip git openssh-client bash

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cookiecutter six

      - name: Scaffold a new service
        id: scaff
        run: |
          cookiecutter --no-input https://github.com/lacion/cookiecutter-golang
            repositoryName="${{ fromJson(inputs.port_payload).payload.properties.service_name }}"
            portUserInputs='{"cookiecutter_app_name": "${{ fromJson(inputs.port_payload).payload.properties.service_name }}" }'
            blueprintIdentifier="service"
            organizationName="${{ env.ORG_NAME }}"
            portClientId="${{ secrets.PORT_CLIENT_ID }}"
            portClientSecret="${{ secrets.PORT_CLIENT_SECRET }}"
            token="${{ secrets.ORG_ADMIN_TOKEN }}"
            portRunId="${{ fromJson(inputs.port_payload).context.runId }}"

      - name: Report deployment Entity to port ðŸš¢
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          identifier: ${{ fromJson(inputs.port_payload).payload.properties.service_name }}
          blueprint: service
          properties: |
            {
              "url": "https://github.com/${{ env.ORG_NAME }}/${{ fromJson(inputs.port_payload).payload.properties.service_name }}",
              "language": "golang"
            }
